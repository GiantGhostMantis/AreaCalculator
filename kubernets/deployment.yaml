# Шаблон взят с документации kubernets

apiVersion: apps/v1
kind: Deployment # Файл развертывания
metadata:
  name: app-deployment
spec:
  selector:
    matchLabels:
      app: our_app # Чтобы контроллер понимал, какие поды принадлежат к нему.
  replicas: 3 # Три пода должны справитсья с нагрузкой по условию задания
  template:
    metadata:
      labels: # Метаинформация о поде в формате Ключ-Значение. 
        app: our_app # Тут название пода
    spec:
      containers:
      - name: our_app_container
        image: our_app:*.*.* # Условно у нас есть уже образ нашего приложения
        imagePullPolicy: Never # Вряд-ли мы его храним в интернете, поэтому без Never будет выдавать ошибки, ибо не может найти образ
        ports:
        - name: app-port # Укажем порт для startup probe
          containerPort: 80 # Стандартный порт для приложения
        resources:
          limits:
            cpu: 1000m # На первые запросы может потребоваться больше ресурсов CPU.
            memory: 128Mi # По требованию должно хватать 128Мб памяти. Контейнер не должен уходить за эти рамки.
          requests:
            cpu: 100m # В целом стабильные 0.1CPU должно хватать по условию.
            memory: 128Mi # По требованию должно хватать 128Мб памяти. Контейнер не должен уходить за эти рамки.
        startupProbe:
          httpGet:
            path: / # Обращаемся по текущему пути, чтобы проверить, живой ли под.
            port: app-port # По порту этого пода
          failureThreshold: 2 # Приложению нужно примерно максимум 10 секунд для старта.
          periodSeconds: 5 # Приложению надо примерно минимально 5 секунд для старта

# Планировщик должен сам распределять поды так, чтобы они были оптимально разположены по нодам
